# The first stage
# Build React static files
# FROM node:15.13-alpine as build

FROM node:15.13-alpine as build

WORKDIR /app/prediction-app-frontend

RUN apk update && apk add --no-cache wget
RUN apk add --no-cache libuv \
    && apk add --no-cache --update-cache  nodejs nodejs-npm \
    && echo "NodeJS Version:" "$(node -v)" \
    && echo "NPM Version:" "$(npm -v)"

COPY ./package.json /app/prediction-app-frontend
COPY ./package-lock.json /app/prediction-app-frontend
RUN npm ci --silent
RUN npm install

COPY . .

RUN npm run build

# The second stage
# Copy React static files and start nginx
FROM nginx:stable-alpine

WORKDIR /app/prediction-app-frontend

COPY ./entrypoint.sh /app/prediction-app-frontend
RUN sed -i 's/\r$//g' /app/prediction-app-frontend/entrypoint.sh
RUN chmod +x /app/prediction-app-frontend/entrypoint.sh


COPY --from=build /app/prediction-app-frontend/build /usr/share/nginx/html
COPY ./nginx/nginx-setup.conf /etc/nginx/conf.d/default.conf

RUN sed -i -e 's/$PORT/'"$PORT"'/g' /etc/nginx/conf.d/default.conf

# CMD sed -i -e 's/8080/'"8080"'/g' /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
# CMD ["bin/sh", "-c", "nginx -g 'daemon off;'"]

ENTRYPOINT ["/app/prediction-app-frontend/entrypoint.sh"]