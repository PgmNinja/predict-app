{"ast":null,"code":"var _jsxFileName = \"/home/qburst/Repositories(Personal)/prediction-app/frontend/src/pages/PredictionPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport teams from '../assets/teams';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PredictionPage = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [homeTeam, setHomeTeam] = useState(\"\");\n  const [awayTeam, setAwayTeam] = useState(\"\");\n\n  let predictResult = async () => {\n    fetch('http://127.0.0.1:8000/api/predict/', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        'home_team': homeTeam,\n        'away_team': awayTeam\n      }).then(response => response, error => console.log('An error occurred.', error)).then(res => dispatch(PredictionPage(res)))\n    });\n  };\n\n  let handleSubmit = () => {\n    predictResult();\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        onChange: e => {\n          const selectedHomeTeam = e.target.value;\n          setHomeTeam(selectedHomeTeam);\n        },\n        children: teams.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: team.team,\n          children: team.team\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        onChange: e => {\n          const selectedawayTeam = e.target.value;\n          setAwayTeam(selectedawayTeam);\n        },\n        children: teams.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: team.team,\n          children: team.team\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: handleSubmit,\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n\n_s(PredictionPage, \"NpL83whg8QyqT3PMJrzQwIEvQUk=\");\n\n_c = PredictionPage;\nexport default PredictionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PredictionPage\");","map":{"version":3,"sources":["/home/qburst/Repositories(Personal)/prediction-app/frontend/src/pages/PredictionPage.js"],"names":["React","useState","teams","PredictionPage","history","homeTeam","setHomeTeam","awayTeam","setAwayTeam","predictResult","fetch","method","headers","body","JSON","stringify","then","response","error","console","log","res","dispatch","handleSubmit","push","e","selectedHomeTeam","target","value","map","team","selectedawayTeam"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;;AAEA,MAAMC,cAAc,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAClC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,MAAIQ,aAAa,GAAG,YAAY;AAC5BC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AACxCC,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF+B;AAKxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,qBAAaV,QADI;AAEjB,qBAAaE;AAFI,OAAf,EAILS,IAJK,CAKFC,QAAQ,IAAIA,QALV,EAOFC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC,CAPP,EASHF,IATG,CASEK,GAAG,IAEPC,QAAQ,CAACnB,cAAc,CAACkB,GAAD,CAAf,CAXN;AALkC,KAAvC,CAAL;AAoBH,GArBD;;AAwBA,MAAIE,YAAY,GAAG,MAAM;AACrBd,IAAAA,aAAa;AACbL,IAAAA,OAAO,CAACoB,IAAR,CAAa,GAAb;AACH,GAHD;;AAMA,sBAAO;AAAA,4BACC;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,QAAQ,EAAGC,CAAD,IAAK;AAC3C,gBAAMC,gBAAgB,GAACD,CAAC,CAACE,MAAF,CAASC,KAAhC;AACAtB,UAAAA,WAAW,CAACoB,gBAAD,CAAX;AACH,SAHD;AAAA,kBAIKxB,KAAK,CAAC2B,GAAN,CAAUC,IAAI,iBACX;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACA,IAApB;AAAA,oBAA2BA,IAAI,CAACA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADH;AAJL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADD,eAaC;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,QAAQ,EAAGL,CAAD,IAAK;AAC3C,gBAAMM,gBAAgB,GAACN,CAAC,CAACE,MAAF,CAASC,KAAhC;AACApB,UAAAA,WAAW,CAACuB,gBAAD,CAAX;AACH,SAHD;AAAA,kBAIK7B,KAAK,CAAC2B,GAAN,CAAUC,IAAI,iBACX;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACA,IAApB;AAAA,oBAA2BA,IAAI,CAACA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADH;AAJL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbD,eAuBC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAEP,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAvBD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AA2BC,CA7DL;;GAAMpB,c;;KAAAA,c;AA+DN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport teams from '../assets/teams';\n\nconst PredictionPage = ({history}) => {\n    const [homeTeam, setHomeTeam] = useState(\"\")\n    const [awayTeam, setAwayTeam] = useState(\"\")\n\n    let predictResult = async () => {\n        fetch('http://127.0.0.1:8000/api/predict/', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                'home_team': homeTeam,\n                'away_team': awayTeam\n            })\n            .then(\n                response => response,\n            \n                error => console.log('An error occurred.', error)\n              )\n              .then(res =>\n            \n                dispatch(PredictionPage(res))\n            \n              )\n        })\n    }\n\n\n    let handleSubmit = () => {\n        predictResult()\n        history.push('/')\n    }\n\n\n    return <div>\n            <div  className='select-menu'>\n                <select className='form-select' onChange={(e)=>{\n                    const selectedHomeTeam=e.target.value;\n                    setHomeTeam(selectedHomeTeam)\n                }}>\n                    {teams.map(team => (\n                        <option value={team.team}>{team.team}</option>\n                    ))}                \n                </select>\n\n            </div>\n\n            <div  className='select-menu'>\n                <select className='form-select' onChange={(e)=>{\n                    const selectedawayTeam=e.target.value;\n                    setAwayTeam(selectedawayTeam)\n                }}>\n                    {teams.map(team => (\n                        <option value={team.team}>{team.team}</option>\n                    ))}\n                </select>\n            </div>\n            <div className='select-menu'>\n                <button className='btn btn-danger' onClick={handleSubmit}>Predict</button>\n            </div>\n         </div>;\n    };\n\nexport default PredictionPage;"]},"metadata":{},"sourceType":"module"}