{"ast":null,"code":"var _jsxFileName = \"/home/qburst/Repositories(Personal)/predict-app/frontend/src/pages/AnalysisPage.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from 'react';\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Chart, ChartTitle, ChartSeries, ChartSeriesItem, ChartCategoryAxis, ChartCategoryAxisItem } from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnalysisPage = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const categories = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"];\n  let [homeTeam, setHomeTeam] = useState(\"\");\n  let [awayTeam, setAwayTeam] = useState(\"\");\n  useEffect(() => {\n    getData();\n    analysisResult();\n  }, []);\n\n  let getData = () => {\n    homeTeam = localStorage.getItem('homeTeam', homeTeam);\n    awayTeam = localStorage.getItem('awayTeam', awayTeam);\n    setHomeTeam(homeTeam);\n    setAwayTeam(awayTeam);\n  };\n\n  let analysisResult = async () => {\n    fetch('http://127.0.0.1:8000/api/analysis/', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"home_team\": localStorage.getItem('homeTeam'),\n        \"away_team\": localStorage.getItem('awaTeam')\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log('Result:', data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"analysis\",\n      children: \"Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      children: [/*#__PURE__*/_jsxDEV(ChartTitle, {\n        text: \"Units sold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartCategoryAxis, {\n        children: /*#__PURE__*/_jsxDEV(ChartCategoryAxisItem, {\n          title: {\n            text: \"Months\"\n          },\n          categories: categories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartSeries, {\n        children: [/*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n          type: \"line\",\n          data: [123, 276, 310, 212, 240, 156, 98]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n          type: \"line\",\n          data: [165, 210, 287, 144, 190, 167, 212]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartSeriesItem, {\n          type: \"line\",\n          data: [56, 140, 195, 46, 123, 78, 95]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AnalysisPage, \"W1gBPwm5iSs7BZ4uscRxBvvLu8U=\");\n\n_c = AnalysisPage;\nexport default AnalysisPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalysisPage\");","map":{"version":3,"sources":["/home/qburst/Repositories(Personal)/predict-app/frontend/src/pages/AnalysisPage.js"],"names":["React","ReactDOM","Chart","ChartTitle","ChartSeries","ChartSeriesItem","ChartCategoryAxis","ChartCategoryAxisItem","AnalysisPage","history","categories","homeTeam","setHomeTeam","useState","awayTeam","setAwayTeam","useEffect","getData","analysisResult","localStorage","getItem","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","text"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n  Chart,\n  ChartTitle,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n} from \"@progress/kendo-react-charts\";\nimport \"hammerjs\";\n\nconst AnalysisPage = ({history}) => {\n\n  const categories = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"];\n\n  let [homeTeam, setHomeTeam] = useState(\"\")\n  let [awayTeam, setAwayTeam] = useState(\"\")\n\n  useEffect(() => {\n    getData()\n    analysisResult()  \n    }, [])\n\n    let getData = () => {\n      homeTeam = localStorage.getItem('homeTeam', homeTeam)\n      awayTeam = localStorage.getItem('awayTeam', awayTeam)\n      setHomeTeam(homeTeam)\n      setAwayTeam(awayTeam)\n  }\n  \n  let analysisResult = async () => {\n    fetch('http://127.0.0.1:8000/api/analysis/', {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"home_team\": localStorage.getItem('homeTeam'),\n            \"away_team\": localStorage.getItem('awaTeam')\n        })\n    }).then(function(response) {\n      return response.json();\n     })\n     .then(function(data) {\n      console.log('Result:', data)\n     })\n}\n \n\n  return <div>\n      <h1 className='analysis'>Analysis</h1>\n      <Chart>\n        <ChartTitle text=\"Units sold\" />\n        <ChartCategoryAxis>\n          <ChartCategoryAxisItem\n            title={{\n              text: \"Months\",\n            }}\n            categories={categories}\n          />\n        </ChartCategoryAxis>\n        <ChartSeries>\n          <ChartSeriesItem type=\"line\" data={[123, 276, 310, 212, 240, 156, 98]} />\n          <ChartSeriesItem type=\"line\" data={[165, 210, 287, 144, 190, 167, 212]} />\n          <ChartSeriesItem type=\"line\" data={[56, 140, 195, 46, 123, 78, 95]} />\n        </ChartSeries>\n  </Chart>\n  </div>;\n};\n\nexport default AnalysisPage;\n"]},"metadata":{},"sourceType":"module"}