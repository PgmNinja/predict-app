{"ast":null,"code":"var _jsxFileName = \"/home/qburst/Repositories(Personal)/predict-app/frontend/src/pages/AnalysisPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst AnalysisPage = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  let [homeTeam, setHomeTeam] = useState(\"\");\n  let [awayTeam, setAwayTeam] = useState(\"\");\n  const data01 = {\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n    datasets: [{\n      label: \"First dataset\",\n      data: [33, 53, 85, 41, 44, 65],\n      fill: false,\n      backgroundColor: \"rgba(75,192,192,0.2)\",\n      borderColor: \"rgba(75,192,192,1)\"\n    }, {\n      label: \"Second dataset\",\n      data: [33, 25, 35, 51, 54, 76],\n      fill: false,\n      borderColor: \"#742774\"\n    }]\n  };\n  useEffect(() => {\n    getData();\n    analysisResult();\n  }, []);\n\n  let getData = () => {\n    homeTeam = localStorage.getItem('homeTeam', homeTeam);\n    awayTeam = localStorage.getItem('awayTeam', awayTeam);\n    setHomeTeam(homeTeam);\n    setAwayTeam(awayTeam);\n  };\n\n  let analysisResult = async () => {\n    fetch('http://127.0.0.1:8000/api/analysis/', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"home_team\": homeTeam,\n        \"away_team\": awayTeam\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log('Result:', data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"analysis\",\n      children: \"Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AnalysisPage, \"W1gBPwm5iSs7BZ4uscRxBvvLu8U=\");\n\n_c = AnalysisPage;\nexport default AnalysisPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalysisPage\");","map":{"version":3,"sources":["/home/qburst/Repositories(Personal)/predict-app/frontend/src/pages/AnalysisPage.js"],"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","AnalysisPage","history","homeTeam","setHomeTeam","awayTeam","setAwayTeam","data01","labels","datasets","label","data","fill","backgroundColor","borderColor","getData","analysisResult","localStorage","getItem","fetch","method","headers","body","JSON","stringify","then","response","json","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n\n\nconst AnalysisPage = ({history}) => {\n\n  let [homeTeam, setHomeTeam] = useState(\"\")\n  let [awayTeam, setAwayTeam] = useState(\"\")\n\n  const data01 = {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n      datasets: [\n        {\n          label: \"First dataset\",\n          data: [33, 53, 85, 41, 44, 65],\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"rgba(75,192,192,1)\"\n        },\n        {\n          label: \"Second dataset\",\n          data: [33, 25, 35, 51, 54, 76],\n          fill: false,\n          borderColor: \"#742774\"\n        }\n      ]\n    };\n\n  useEffect(() => {\n    getData()\n    analysisResult()  \n    }, [])\n\n    let getData = () => {\n      homeTeam = localStorage.getItem('homeTeam', homeTeam)\n      awayTeam = localStorage.getItem('awayTeam', awayTeam)\n      setHomeTeam(homeTeam)\n      setAwayTeam(awayTeam)\n  }\n  \n  let analysisResult = async () => {\n    fetch('http://127.0.0.1:8000/api/analysis/', {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            \"home_team\": homeTeam,\n            \"away_team\": awayTeam\n        })\n    }).then(function(response) {\n      return response.json();\n     })\n     .then(function(data) {\n      console.log('Result:', data)\n     })\n}\n \n\n  return <div>\n      <h1 className='analysis'>Analysis</h1>\n      <div className=\"App\">\n      <Line data={data} />\n    </div>\n    </div>\n\n};\n\nexport default AnalysisPage;\n"]},"metadata":{},"sourceType":"module"}